<#@ template  debug="true" hostSpecific="true" #><#@ output extension=".cs" #><#@ Assembly Name="System.Windows.Forms" #><#@ import namespace="System" #><#@ import namespace="System.IO" #><#@ import namespace="System.Diagnostics" #><#@ import namespace="System.Linq" #><#@ import namespace="System.Collections" #><#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\Custom.Template\include\PetaPoco.Core.ttinclude" #><#@ include file="..\..\Custom.Template\include\PetaPoco.MultiFile.ttinclude" #>
<#
	// Settings
    ConnectionStringName = "demo";			// Uses last connection string in config if not specified
    Namespace = "demo.Model";
    RepoName = "demo";
    GenerateOperations = true;
	GeneratePocos = true;
	GenerateCommon = true;
	ClassPrefix = "";
	ClassSuffix = "";
	TrackModifiedColumns = false;
	ExplicitColumns = true;
	ExcludePrefix = new string[] {}; // Exclude tables by prefix.

	// 自定义增加
	tablePrefixName = "";
	columnPrefixName = "";

   // Read schema
	var tables = LoadTables();
	string dataName=string.Empty;      //  sys_Menus     ---->   Menu
	string prefixName=string.Empty;	//									 menu
	string className=string.Empty;		// 类名
	string description=string.Empty;    // 描述

	foreach(Table tbl in from t in tables where !t.Ignore select t)
	{
		// Menu		驼峰命名
		dataName=tbl.ClassName;

		// menu	  首字母小写
		prefixName=tbl.CamelName;

		// 描述
		description=tbl.Description;

		// 文件名
		className=dataName+"";
		manager.StartBlock(className+".cs");
		
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace <#=Namespace #>
{
	/// <summary>
    ///  <#=description#> 
    /// </summary>
	[Serializable]
	public class <#=className#>
	{
		<# foreach(Column col in from c in tbl.Columns where !c.Ignore select c){ #>
/// <summary>
        /// <#=col.Description #>
        /// </summary>
		public <#=col.PropertyType #><#=CheckNullable(col)#> <#=col.Name #> { get; set; }
		<# } #>


		public <#=className#> As<#=dataName#>()
		{
			return new <#=className#>
			{
	<# foreach(Column col in from c in tbl.Columns where !c.Ignore select c){ #>
			<#=CheckNullable(col)#> <#=col.Name #> = this.<#=col.Name  #>,
	<# } #>
		};
		}

	}
}

<#
		manager.EndBlock();
	}

	manager.Process(true);
#>